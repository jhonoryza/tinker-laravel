name: Build
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - platform: macos-latest
            targets: aarch64-apple-darwin,x86_64-apple-darwin

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust targets
        if: matrix.platform == 'ubuntu-latest'
        run: |
          rustup target add x86_64-unknown-linux-gnu
          
      - name: Setup Docker for Linux build
        if: matrix.platform == 'ubuntu-latest'
        uses: docker/setup-buildx-action@v3

      - name: Build in Docker for Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          docker run --rm -v $(pwd):/app -w /app ubuntu:22.04 \
            bash -c "apt-get update && \
            apt-get install -y curl build-essential libgtk-3-dev webkit2gtk-4.0 libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf && \
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
            export PATH=\"/root/.cargo/bin:\$PATH\" && \ 
            cargo build --release --target x86_64-unknown-linux-gnu"

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Add Rust targets (macOS only)
        if: matrix.platform == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      - name: Install frontend dependencies
        run: bun install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.platform == 'macos-latest' && '--target universal-apple-darwin' || '' }}